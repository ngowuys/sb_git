var F=Object.defineProperty;var y=(e,r)=>{for(var o in r)F(e,o,{get:r[o],enumerable:!0})};var m=e=>{throw new Error("Not initialized yet")},d=typeof window>"u"&&typeof globalThis.WebSocketPair>"u";typeof Deno>"u"&&(self.Deno={args:[],build:{arch:"x86_64"},env:{get(){}}});var p=new Map,l=0;d&&(globalThis.syscall=async(e,...r)=>await new Promise((o,n)=>{l++,p.set(l,{resolve:o,reject:n}),m({type:"sys",id:l,name:e,args:r})}));function P(e,r,o){d&&(m=o,self.addEventListener("message",n=>{(async()=>{let i=n.data;switch(i.type){case"inv":{let u=e[i.name];if(!u)throw new Error(`Function not loaded: ${i.name}`);try{let c=await Promise.resolve(u(...i.args||[]));m({type:"invr",id:i.id,result:c})}catch(c){console.error("An exception was thrown as a result of invoking function",i.name,"error:",c.message),m({type:"invr",id:i.id,error:c.message})}}break;case"sysr":{let u=i.id,c=p.get(u);if(!c)throw Error("Invalid request id");p.delete(u),i.error?c.reject(new Error(i.error)):c.resolve(i.result)}break}})().catch(console.error)}),m({type:"manifest",manifest:r}))}function A(e){let r=atob(e),o=r.length,n=new Uint8Array(o);for(let i=0;i<o;i++)n[i]=r.charCodeAt(i);return n}function x(e){typeof e=="string"&&(e=new TextEncoder().encode(e));let r="",o=e.byteLength;for(let n=0;n<o;n++)r+=String.fromCharCode(e[n]);return btoa(r)}async function M(e,r){if(typeof e!="string"){let o=new Uint8Array(await e.arrayBuffer()),n=o.length>0?x(o):void 0;r={method:e.method,headers:Object.fromEntries(e.headers.entries()),base64Body:n},e=e.url}return syscall("sandboxFetch.fetch",e,r)}globalThis.nativeFetch=globalThis.fetch;function T(){globalThis.fetch=async function(e,r){let o=r&&r.body?x(new Uint8Array(await new Response(r.body).arrayBuffer())):void 0,n=await M(e,r&&{method:r.method,headers:r.headers,base64Body:o});return new Response(n.base64Body?A(n.base64Body):null,{status:n.status,headers:n.headers})}}d&&T();var a={};y(a,{confirm:()=>ie,copyToClipboard:()=>ye,deleteLine:()=>Pe,dispatch:()=>oe,downloadFile:()=>V,filterBox:()=>Y,flashNotification:()=>H,fold:()=>ce,foldAll:()=>le,getCurrentPage:()=>S,getCurrentPageMeta:()=>k,getCursor:()=>L,getSelection:()=>j,getText:()=>R,getUiOption:()=>se,goHistory:()=>I,hidePanel:()=>J,insertAtCursor:()=>re,insertAtPos:()=>X,moveCursor:()=>ee,moveCursorToLine:()=>te,moveLineDown:()=>he,moveLineUp:()=>xe,navigate:()=>D,newWindow:()=>N,openCommandPalette:()=>_,openPageNavigator:()=>q,openSearchPanel:()=>fe,openUrl:()=>W,prompt:()=>ne,rebuildEditorState:()=>Q,redo:()=>ge,reloadConfigAndCommands:()=>B,reloadPage:()=>G,reloadUI:()=>K,replaceRange:()=>Z,save:()=>O,setSelection:()=>E,setText:()=>U,setUiOption:()=>ae,showPanel:()=>z,toggleFold:()=>me,undo:()=>de,unfold:()=>ue,unfoldAll:()=>pe,uploadFile:()=>$,vimEx:()=>be});typeof self>"u"&&(self={syscall:()=>{throw new Error("Not implemented here")}});function t(e,...r){return globalThis.syscall(e,...r)}function S(){return t("editor.getCurrentPage")}function k(){return t("editor.getCurrentPageMeta")}function R(){return t("editor.getText")}function U(e,r=!1){return t("editor.setText",e,r)}function L(){return t("editor.getCursor")}function j(){return t("editor.getSelection")}function E(e,r){return t("editor.setSelection",e,r)}function O(){return t("editor.save")}function D(e,r=!1,o=!1){return t("editor.navigate",e,r,o)}function q(e="page"){return t("editor.openPageNavigator",e)}function _(){return t("editor.openCommandPalette")}function G(){return t("editor.reloadPage")}function K(){return t("editor.reloadUI")}function Q(){return t("editor.rebuildEditorState")}function B(){return t("editor.reloadConfigAndCommands")}function W(e,r=!1){return t("editor.openUrl",e,r)}function N(){return t("editor.newWindow")}function I(e){return t("editor.goHistory",e)}function V(e,r){return t("editor.downloadFile",e,r)}function $(e,r){return t("editor.uploadFile",e,r)}function H(e,r="info"){return t("editor.flashNotification",e,r)}function Y(e,r,o="",n=""){return t("editor.filterBox",e,r,o,n)}function z(e,r,o,n=""){return t("editor.showPanel",e,r,o,n)}function J(e){return t("editor.hidePanel",e)}function X(e,r){return t("editor.insertAtPos",e,r)}function Z(e,r,o){return t("editor.replaceRange",e,r,o)}function ee(e,r=!1){return t("editor.moveCursor",e,r)}function te(e,r=1,o=!1){return t("editor.moveCursorToLine",e,r,o)}function re(e,r=!1){return t("editor.insertAtCursor",e,r)}function oe(e){return t("editor.dispatch",e)}function ne(e,r=""){return t("editor.prompt",e,r)}function ie(e){return t("editor.confirm",e)}function se(e){return t("editor.getUiOption",e)}function ae(e,r){return t("editor.setUiOption",e,r)}function ce(){return t("editor.fold")}function ue(){return t("editor.unfold")}function me(){return t("editor.toggleFold")}function le(){return t("editor.foldAll")}function pe(){return t("editor.unfoldAll")}function de(){return t("editor.undo")}function ge(){return t("editor.redo")}function fe(){return t("editor.openSearchPanel")}function ye(e){return t("editor.copyToClipboard",e)}function Pe(){return t("editor.deleteLine")}function xe(){return t("editor.moveLineUp")}function he(){return t("editor.moveLineDown")}function be(e){return t("editor.vimEx",e)}var s={};y(s,{run:()=>Le});function Le(e,r){return t("shell.run",e,r)}var g=async()=>{let e=await a.prompt("Project URL:");if(!e)return;let r=await a.prompt("Access token (For GitLab: username:access_token):");if(!r)return;let o=await a.prompt("Your name:");if(!o)return;let n=await a.prompt("Your email:");if(!n)return;let i=e.split("/");i[2]=`${r}@${i[2]}`;let u={url:i.join("/")+".git",name:o,email:n};await Ge(u)},f=async()=>{console.log("Starting sync with git repo"),await Ke(),console.log("Pulling change(s) from repo"),await s.run("git",["pull"]),console.log("Pushing change(s) to repo"),await s.run("git",["push"]),console.log("Done with sync task")},h=async()=>{let e=await a.prompt("Enter new token (For GitLab: username:access_token):");if(!e)return;let o=(await s.run("git",["remote","get-url","origin"])).stdout.trim().split("/");o[2]=o[2].replace(/^.*@/,`${e}@`);let n=o.join("/");if(n.trim()==""){await a.flashNotification("Failed to replace token");return}await s.run("git",["remote","set-url","origin",n]),await a.flashNotification("Replaced token successfully!")},b=async()=>{console.log("Deleting old .git folder"),await s.run("rm",["-rf",".git"]),console.log("Trigger gitClone"),await g()},v=async()=>{new Date().getMinutes()%5===0&&await f()},Ge=async e=>{await a.flashNotification("Cloning your git repo, it might take some time."),await s.run("git",["clone",e.url,"_sb_git"]),console.log("Creating .gitignore file"),await s.run("echo",[".silverbullet.db*",">",".gitignore"]),await s.run("echo",["_plug/",">>",".gitignore"]),await s.run("echo",["Library/",">>",".gitignore"]),await s.run("bash",["-c","mv -f _sb_git/{.,}* . 2> /dev/null; true"]),await s.run("rm",["-rf","_sb_git"]),await s.run("git",["config","user.name",e.name]),await s.run("git",["config","user.email",e.email]),await a.flashNotification("Done. Now just wait for sync to kick in to get all the content.")},Ke=async e=>{e||(e=`bot - auto commit ${Date.now()}`),console.log(`Commit your space to git with message: ${e}`),await s.run("git",["add","./*"]);try{await s.run("git",["commit","-a","-m",e])}catch{console.log("Failed to commit")}console.log("Done")};var w={gitCloneCmd:g,syncFromGitCmd:f,replaceTokenCmd:h,changeGitRepoCmd:b,scheduleCommitCmd:v},C={name:"sb_git",requiredPermissions:["shell"],functions:{gitCloneCmd:{path:"sb_git.ts:gitClone",command:{name:"Git: Clone repo"}},syncFromGitCmd:{path:"sb_git.ts:sync",command:{name:"Git: Sync from Git"}},replaceTokenCmd:{path:"sb_git.ts:replaceToken",command:{name:"Git: Replace token"}},changeGitRepoCmd:{path:"sb_git.ts:changeGitRepo",command:{name:"Git: Change git repo"}},scheduleCommitCmd:{path:"sb_git.ts:scheduleCommit",env:"server",cron:"* * * * *"}},assets:{}},wt={manifest:C,functionMapping:w};P(w,C,self.postMessage);export{wt as plug};
